계획 
- 1월 말까지 현재 c++로 만든 다크다이스를 c#으로 변환과정-일부 완성
- 2월 초까지 필요한 UI를 제작-로그인화면/개릭터 선택창/캐릭터 상태창
- 2월 중순까지 배틀시스템 제작(2D로 맵을 만들고 충돌시 전투화면으로 진행/ 전투시 1대1상황으로 각각 스킬 가방 도망 순으로 스킬은 최대 4개/
가방은 회복템과 아이템/ 도망은 확률도 도망/ 스킬사용시 주사위를 사용하여 주사위 수치에 따라 전투진행하는 방식)
- 2동안 게임 완성시키기(필요한 것만 넣고 후에 추가형식)

-과제
- 연출에 신경쓰기/ 유지보수하기-3순위
- 포톤 동기화 연동(전투씬에서 플레이어끼리 연동해서 전투후 승리 패배 연출)-2순위
- 플레이어와 몬스터의 전투시스템을 전투연산은 파이트 시스템에서 처리하고 결과값을 플레이어와 몬스터에서 스스로 계산으로 수정하기-> 이후 전략패턴을 만들기.-1순위



- 과제 현재 작업한 내용 //으로 바꾼거 풀고 수정해서 커밋하기
- 캐릭터와 데이터를 구분
데이터- 기본정보
캐릭터-수치를 담는다
플레이어 안에 들어가야 할 것
플레이어 데이터,아이템데이터,버프데이터

플레이어 최대체력/현재체력 || 플레이어 최대스텟/현재스텟
최대체력(기본+아이템)/현재체력(최대체력+버프+데미지) || 최대스텟(기본+아이템)/현재스텟(최대스텟+버프)

몬스터 최대체력/현재체력 || 몬스터 최대스텟/현재스텟 *현재 몬스터는 버프가 없으므로
최대체력(기본)/현재체력(최대체력+데미지) || 최대스텟(기본)/현재스텟(기본)

캐릭터 기본베이스
- 이름/공격력/지능/방어력/마법저항력

캐릭터 베이스
- 기본(기본+보너스)/ 아이템/ 총량/ 현재

아이템베이스
- 이름/ 아이템 종류/아이템스텟

아이템 - 아이템 베이스 부모
- 착용여부

아이템종류
- 방어구,무기,장신구,룬 -> 착용가능
- 물약, 버프 -> 착용불가,쿨타임

상점구현
- 아이템 뽑기(랜덤으로)
- 물약 뽑기(랜던)
- 버프는 미구현

1. 아이템 제작
2. 아이템을 가방에구현(데이터)
3. 아이템 구매시 랜덤으로 방어구/무기/장신구 중 하나가 선택됨
-> 선택된 아이템의 타입에 따라 그아이템의 최대까지 랜덤
-> 그렇게 선택된 아이템을 가방에 생성해줌(클론생성)
-> 가방에 생성된 아이템 정보를 플레이어 정보에 넘겨줌
3. 강방에 구현된것을 플레이어에게 적용


배틀시스템
- 2D맵으로 진행해서 캐릭터를 만들고 적을 제작-> 2D맵에 캐릭터,적캐릭터,아이템 오브젝트
- 충돌시 좌하단 캐릭터, 우상단 적 캐릭터/ 우하단 스킬,가방,도망UI(참조,포켓몬)-UI작업종료
- 스킬은 최대 3개설정, 스킬사용시 스테미너 사용, 주사위를 던져서 주사위 수치에따라 전투성공여부-UI작업 종료(주사위 미구연)
- 가방은 회복템과 장비로 구분
- 회피는 확률에 따라 적의 공격을 회피함(+ST회복)

- 로비(맵)에서 캐릭터 움직임과 맵디자인구현,충돌구현하기(캐릭터 움직임과 충돌완성/ 맵디자인 손봐야함)
-(충돌은 몬스터가 플레이어의 범위를 측정해서 일정 거리에 도달하면 충돌 판정)
-우선순위 캐릭터 움직임이 자연스럽게(카메라 무빙워크 제작완료)
- 충돌후 전투 화면으로 전환(완료)
- 맵디자인꾸미기

- 테이블에 넣어야할 자료들
- 캐릭터데이터,몬스터데이터,아이템데이터,스테이지,전투스킬,상점,사운드,비디오

- 스테이지 테이블에서 처리해야할것
- 스테이지 아이디,타입(x),몬스터1~6,중간보스1~2,최종보스,스테이지 보상,스테이지 클리어 조건, 스테이지 프리펩, 스테이지 이름
- 현재는 소환여부만 이후에 다되면 몬스터 종류추가


- 현재 진행상황
- ST부족시 전투방식 변경
- 시작비디오 변경

- 처리해야 하는 과제
- 플레이어 프리펩오류(카메라에 데이터를 삽입불가)
- 룬가방
- 보스몬스터 특수공격이나 궁극기 만들기
- 버프시스템
- 레벨디자인
- 캐릭터의 타입구분과 안에 들어가야할 내용(절반이해)
- UI_1Deapth를 사용할거면 그아래에 있는 2Deapth를 팝업으로 사용해라
(팝업의 개념은 확정 y/n같은 개념
- 게임플레이 영상을 오프닝 영상으로 만들기(배포용일때만 플레이 될때)
- 오토 모드를 넣어보기
- 포톤개념으로 네트워크 통신을 만들어야함(알려줄수도?)
- 연출만들기
- 파티클에 큐 넣어서 만들어보기
- UI창 관리할떄 스택만들기
- Hero 스크립트를 보면서 게임스크립트 변화시키기(자료형과 인게임과 데이터를 구분짓는등)
- 포톤사용해서 PunRPC로 전투 동기화 시키기(만약하게되면 1대1매칭으로 전투)
- 캐릭터 데이터로 상속구조를 만들어라(공통되는것을 빼서 상속구조)-전략패턴과 흡사(되면 넣어라)
- 쉐이더도 공부해서 넣기
- 벡터에 대한 공부(외적, 내적, 거리)
- 영상찍어서 연출보여주기

배운것 복습
- 리스트는 정렬을 위해서
- 전략패턴 : 가상함수를 상속받은 캐릭터가 공통인것은 그대로 다른것으 재정의
- 상태 패턴 : AI에 사용했던 현재 상태
- 매니저 패턴 : 동일한 것을 관리해줌
- 싱글톤패턴 : Monobihavier을 사용하지않음-접근안함
- 팩토리패턴 : 부모클래스를 가상화로 만들고 자식클래스를 상속시킴
-PathNode 길찾기 시스템(점을 찍고 분류를 해서 리스트화 시킴)
(이중 연결 시스템- 앞의좌표는 이전 좌표를 뒤의 좌표는 이후 좌표로 하고 인덱스에 따라 넘어감)
- addcomponent은 new와 같음(중요한것은 이 스크립트를 가지고 있는 객체에 추가가 됨)
- 그래서 인게임에서 객체마다 부여할거라면 객체 = 객체.addcomponent로 제작
- base함수는 virtual로 만든 부모를 오버라이딩 했을때 부모것을 그대로 복사해오는 함수
- Git 사용
- 비디오 :유니티 엔진 비디오 선언, 비디오 플레이어선언(렌더타겟방식)
- 코루틴 : 멀티스레드(자체적으로 동시에 처리하는 방식)(단, 중요도에 따라 실행됨)
(StartCoroutine(함수)- 사용할려면 IEnumerator로 먼저시전)
(yield return을 무조건 사용해야한다.- Waitforseconds(1f)를 사용하면 1초후에 다음코드로 넘어감)
(yield return을 쓰면 반환후에 업데이트가 진행되고 그 아래문을 실행한다.)
(몇번이고 계속실행가능이기 때문에 끝나는 코드를 만들어놔야한다.)
- 파일저장 : [Serializable]을 선언해야한다.(실시간/전체/현재/백업으로 나누어서 관리하는것이 좋다.)
- 아이템 리스트로 정렬및 상속구조,분류
-파일저장
-실시간
->로비에서 전투로 넘어갈때 로비씬에 있는 데이터를 저장
(플레이어 현재위치,몬스터 현재위치,몬스터 유무)
-전체
- 유니티 메뉴를 만들어서 씀
- 에디터 폴더는 유니티에서만 사용하는 폴더(빌드x)
- 각파일을 불러와서 파일안에 내용을 바꾼다.
- 테이블 : 엑셀로 데이터를 불러온다.(메모장에서는 안꺠짐,만약인코딩이 없으면 .csv로 바꾸고 UTF-8포맷으로 만든다)(Replace : 파일의 단어를 자르는 명령어)
- Photon : 네트워크(1P2P개념)- 공부해보기(네트웨크 지식필요)-동기화개념
- 포톤뷰,포톤 트랜스폼 뷰 2개는 캐릭터에 동기화 할때 필요함
- 방장이 참가자 확인하는 타이밍때 정보받는 것
- TCP(서버실시간매칭)/UDP(필요한 순간에만 데이터를 가져옴)->TCP가 안정적이다. UDP는 연결하는쪽이 호스트인 방식
-IPV4는 32비트, IPV6는 128비트를 사용(apple에서 사용)
- 조이스틱
- json파싱,서버패킷csv파싱,웹통신,AI,List,stack,que,딕셔너리
- WWWForm을 이용한 json 파싱을 이용해서 DB데이터 처리
- CSV파싱(캐릭터,아이템,맵,스킬)
- APK빌드(나중에 따로 뽑아라)
- 에디터 툴을 이용해서 테이블 파싱(에디터에서 실행할수 있도록,유니티내에서 기능을 만들어서 만들수 있다.빌드구글)-되면 보유기술에 집어 넣기
- 쉐이더(모자이크기술-공부하기):위치값을 바꿔서 RGB값을 표현한다.
-Json표시방법
-{"필드명":["필드명":"데이터","필드명":"데이터"]}
-아이피주소와 포트번호 필요






 
